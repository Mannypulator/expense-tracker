{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItems.js","components/Expenses/ExpensesLIst.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","ExpenseChart","chartDataPoints","expenses","expense","getMonth","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItems","ExpensesList","items","length","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7091afd1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  //   eslint-disable-next-line\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  // eslint-disable-next-line\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  // eslint-disable-next-line\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  // eslint-disable-next-line\n  //   const [userInput, setUserInput] = useState({\n  //     enteredTitle: \"\",\n  //     enteredAmount: \"\",\n  //     enteredDate: \"\",\n  //   });\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n  // eslint-disable-next-line\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    //   setUserInput({\n    //     ...userInput,\n    //     enteredAmount: event.target.value,\n    //   });\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredAmount: event.target.value };\n    // });\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    //   setUserInput({\n    //     ...userInput,\n    //     enteredDate: event.target.value,\n    //   });\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredDate: event.target.value };\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label> Title </label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label> Amount </label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label> Date </label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button type=\"submit\"> Add Expense </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      \n      {!isEditing && (\n        <button onClick={startEditingHandler}> Add New Expense </button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label> Filter by year </label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\"> 2022 </option>\n          <option value=\"2021\"> 2021 </option>\n          <option value=\"2020\"> 2020 </option>\n          <option value=\"2019\"> 2019 </option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      \n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpenseChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpenseChart;\n","import React from \"react\";\n\nimport \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\"> {month} </div>\n      <div className=\"expense-date__year\"> {year} </div>\n      <div className=\"expense-date__day\"> {day} </div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItems.css\";\n\nconst ExpenseItems = (props) => {\n  // const [title, setTitle] = useState(props.title);\n  // const clickHandler = () => {\n  //   setTitle(\"Updated!\");\n  //   console.log(title);\n  return (\n    <li>\n      <Card className='expense-item'>\n        <ExpenseDate date={props.date} />\n        <div className='expense-item__description'>\n          <h2>{props.title}</h2>\n          <div className='expense-item__price'>${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n  };\n\n\nexport default ExpenseItems;\n","import React from \"react\";\nimport ExpenseItems from \"./ExpenseItems\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  // let expensesContent = <p> No expenses found </p>;\n if (props.items.length===0){\n     return <h2 className=\"expenses-list__fallback\">No Expense Found!</h2>\n }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItems\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\nexport default ExpensesList;\n","import React, { useState } from \"react\";\n\n// import ExpenseItems from \"./ExpenseItems\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from \"./ExpenseChart\";\nimport ExpensesList from \"./ExpensesLIst\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n"],"sourceRoot":""}